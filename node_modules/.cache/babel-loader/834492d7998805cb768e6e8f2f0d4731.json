{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\goit-react-hw-05-movies\\\\src\\\\components\\\\Cast\\\\Cast.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from '../../services/api';\nimport styles from '../components/Cast/Cast.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cast = () => {\n  _s();\n  const {\n    movieId\n  } = useParams();\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    const fetchMovieCredits = async () => {\n      try {\n        const credits = await getMovieCredits(movieId);\n        setCast(credits.cast);\n      } catch (error) {\n        console.error('Error fetching movie credits:', error);\n      }\n    };\n    fetchMovieCredits();\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.castContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.castList,\n      children: cast.map(actor => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.actorCard,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w200${actor.profile_path}`,\n          alt: actor.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: actor.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Character: \", actor.character]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, actor.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Cast, \"RECX0ZkPp833Bw9L7PJRS5R3l1k=\", false, function () {\n  return [useParams];\n});\n_c = Cast;\nexport default Cast;\nvar _c;\n$RefreshReg$(_c, \"Cast\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getMovieCredits","styles","jsxDEV","_jsxDEV","Cast","_s","movieId","cast","setCast","fetchMovieCredits","credits","error","console","className","castContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","castList","map","actor","actorCard","src","profile_path","alt","name","character","id","_c","$RefreshReg$"],"sources":["D:/GitHub/goit-react-hw-05-movies/src/components/Cast/Cast.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getMovieCredits } from '../../services/api';\r\n\r\nimport styles from '../components/Cast/Cast.module.css';\r\n\r\nconst Cast = () => {\r\n  const { movieId } = useParams();\r\n  const [cast, setCast] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchMovieCredits = async () => {\r\n      try {\r\n        const credits = await getMovieCredits(movieId);\r\n        setCast(credits.cast);\r\n      } catch (error) {\r\n        console.error('Error fetching movie credits:', error);\r\n      }\r\n    };\r\n\r\n    fetchMovieCredits();\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <div className={styles.castContainer}>\r\n      <h2>Cast</h2>\r\n      <div className={styles.castList}>\r\n        {cast.map((actor) => (\r\n          <div key={actor.id} className={styles.actorCard}>\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\r\n              alt={actor.name}\r\n            />\r\n            <p>{actor.name}</p>\r\n            <p>Character: {actor.character}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cast;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,eAAe,QAAQ,oBAAoB;AAEpD,OAAOC,MAAM,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM;IAAEC;EAAQ,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC/B,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,MAAMW,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,OAAO,GAAG,MAAMV,eAAe,CAACM,OAAO,CAAC;QAC9CE,OAAO,CAACE,OAAO,CAACH,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAEDF,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACH,OAAO,CAAC,CAAC;EAEb,oBACEH,OAAA;IAAKU,SAAS,EAAEZ,MAAM,CAACa,aAAc;IAAAC,QAAA,gBACnCZ,OAAA;MAAAY,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbhB,OAAA;MAAKU,SAAS,EAAEZ,MAAM,CAACmB,QAAS;MAAAL,QAAA,EAC7BR,IAAI,CAACc,GAAG,CAAEC,KAAK,iBACdnB,OAAA;QAAoBU,SAAS,EAAEZ,MAAM,CAACsB,SAAU;QAAAR,QAAA,gBAC9CZ,OAAA;UACEqB,GAAG,EAAG,kCAAiCF,KAAK,CAACG,YAAa,EAAE;UAC5DC,GAAG,EAAEJ,KAAK,CAACK;QAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,eACFhB,OAAA;UAAAY,QAAA,EAAIO,KAAK,CAACK;QAAI;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnBhB,OAAA;UAAAY,QAAA,GAAG,aAAW,EAACO,KAAK,CAACM,SAAS;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAN3BG,KAAK,CAACO,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOb,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CAlCID,IAAI;EAAA,QACYL,SAAS;AAAA;AAAA+B,EAAA,GADzB1B,IAAI;AAoCV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}