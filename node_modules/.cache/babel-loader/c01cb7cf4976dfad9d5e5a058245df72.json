{"ast":null,"code":"import axios from 'axios';\nconst API_KEY = '117c7c107e7af0f4d9d4763ca17ce41d';\nconst apiUrl = 'https://api.themoviedb.org/3';\nconst instance = axios.create({\n  baseURL: apiUrl,\n  params: {\n    api_key: API_KEY\n  }\n});\nconst fetchTrending = async () => {\n  try {\n    const response = await instance.get('/trending/all/day'); // Правильний шлях для отримання популярних фільмів\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\nconst searchMovies = async query => {\n  try {\n    const response = await instance.get('/search/movie', {\n      params: {\n        query\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    throw error;\n  }\n};\nconst getMovieDetails = async movieId => {\n  try {\n    const response = await instance.get(`/movie/${movieId}`); // Правильний шлях для отримання деталей фільму\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\nconst getMovieCredits = async movieId => {\n  try {\n    const response = await instance.get(`/movie/${movieId}/credits`); // Правильний шлях для отримання акторського складу фільму\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    throw error;\n  }\n};\nconst getMovieReviews = async movieId => {\n  try {\n    const response = await instance.get(`/movie/${movieId}/reviews`); // Правильний шлях для отримання відгуків на фільм\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\nexport { fetchTrending, searchMovies, getMovieDetails, getMovieCredits, getMovieReviews };","map":{"version":3,"names":["axios","API_KEY","apiUrl","instance","create","baseURL","params","api_key","fetchTrending","response","get","data","error","console","searchMovies","query","getMovieDetails","movieId","getMovieCredits","getMovieReviews"],"sources":["D:/GitHub/goit-react-hw-05-movies/src/services/Api.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = '117c7c107e7af0f4d9d4763ca17ce41d';\r\nconst apiUrl = 'https://api.themoviedb.org/3';\r\n\r\nconst instance = axios.create({\r\n  baseURL: apiUrl,\r\n  params: {\r\n    api_key: API_KEY,\r\n  },\r\n});\r\n\r\nconst fetchTrending = async () => {\r\n  try {\r\n    const response = await instance.get('/trending/all/day'); // Правильний шлях для отримання популярних фільмів\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching trending movies:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst searchMovies = async (query) => {\r\n  try {\r\n    const response = await instance.get('/search/movie', {\r\n      params: { query },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error searching movies:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst getMovieDetails = async (movieId) => {\r\n  try {\r\n    const response = await instance.get(`/movie/${movieId}`); // Правильний шлях для отримання деталей фільму\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching movie details:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst getMovieCredits = async (movieId) => {\r\n  try {\r\n    const response = await instance.get(`/movie/${movieId}/credits`); // Правильний шлях для отримання акторського складу фільму\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching movie credits:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst getMovieReviews = async (movieId) => {\r\n  try {\r\n    const response = await instance.get(`/movie/${movieId}/reviews`); // Правильний шлях для отримання відгуків на фільм\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching movie reviews:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport { fetchTrending, searchMovies, getMovieDetails, getMovieCredits, getMovieReviews };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,kCAAkC;AAClD,MAAMC,MAAM,GAAG,8BAA8B;AAE7C,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAM,CAAC;EAC5BC,OAAO,EAAEH,MAAM;EACfI,MAAM,EAAE;IACNC,OAAO,EAAEN;EACX;AACF,CAAC,CAAC;AAEF,MAAMO,aAAa,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,QAAQ,CAACO,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAC1D,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAME,YAAY,GAAG,MAAOC,KAAK,IAAK;EACpC,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMN,QAAQ,CAACO,GAAG,CAAC,eAAe,EAAE;MACnDJ,MAAM,EAAE;QAAES;MAAM;IAClB,CAAC,CAAC;IACF,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAMI,eAAe,GAAG,MAAOC,OAAO,IAAK;EACzC,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMN,QAAQ,CAACO,GAAG,CAAE,UAASO,OAAQ,EAAC,CAAC,CAAC,CAAC;IAC1D,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAMM,eAAe,GAAG,MAAOD,OAAO,IAAK;EACzC,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMN,QAAQ,CAACO,GAAG,CAAE,UAASO,OAAQ,UAAS,CAAC,CAAC,CAAC;IAClE,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAMO,eAAe,GAAG,MAAOF,OAAO,IAAK;EACzC,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMN,QAAQ,CAACO,GAAG,CAAE,UAASO,OAAQ,UAAS,CAAC,CAAC,CAAC;IAClE,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,SAASJ,aAAa,EAAEM,YAAY,EAAEE,eAAe,EAAEE,eAAe,EAAEC,eAAe"},"metadata":{},"sourceType":"module"}