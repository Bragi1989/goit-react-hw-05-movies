{"version":3,"file":"static/js/76.01612583.chunk.js","mappings":"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","sources":["components/Cast/Cast.module.css","components/Cast/Cast.jsx","services/Api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from '../../services/Api.jsx';\n\nimport styles from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieCredits = async () => {\n      try {\n        const credits = await getMovieCredits(movieId);\n        setCast(credits.cast);\n      } catch (error) {\n        console.error('Error fetching movie credits:', error);\n      }\n    };\n\n    fetchMovieCredits();\n  }, [movieId]);\n\n  return (\n    <div className={styles.castContainer}>\n      <h2>Cast</h2>\n      <div className={styles.castList}>\n        {cast.map((actor) => (\n          <div key={actor.id} className={styles.actorCard}>\n            <img\n              src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n              alt={actor.name}\n            />\n            <p>{actor.name}</p>\n            <p>Character: {actor.character}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Cast;","import axios from 'axios';\n\nconst API_KEY = '117c7c107e7af0f4d9d4763ca17ce41d';\nconst apiUrl = 'https://api.themoviedb.org/3';\n\nconst instance = axios.create({\n  baseURL: apiUrl,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nconst fetchTrending = async () => {\n  try {\n    const response = await instance.get('/trending/all/day'); // Правильний шлях для отримання популярних фільмів\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nconst searchMovies = async (query) => {\n  try {\n    const response = await instance.get('/search/movie', {\n      params: { query },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    throw error;\n  }\n};\n\nconst getMovieDetails = async (movieId) => {\n  try {\n    const response = await instance.get(`/movie/${movieId}`); // Правильний шлях для отримання деталей фільму\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nconst getMovieCredits = async (movieId) => {\n  try {\n    const response = await instance.get(`/movie/${movieId}/credits`); // Правильний шлях для отримання акторського складу фільму\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    throw error;\n  }\n};\n\nconst getMovieReviews = async (movieId) => {\n  try {\n    const response = await instance.get(`/movie/${movieId}/reviews`); // Правильний шлях для отримання відгуків на фільм\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\n\nexport { fetchTrending, searchMovies, getMovieDetails, getMovieCredits, getMovieReviews };"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchMovieCredits","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","credits","_context","prev","next","getMovieCredits","sent","t0","console","error","stop","apply","arguments","_jsxs","className","styles","children","_jsx","map","actor","src","concat","profile_path","alt","name","character","id","instance","axios","baseURL","params","api_key","fetchTrending","response","get","abrupt","data","searchMovies","_ref2","_callee2","query","_context2","_x","getMovieDetails","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","_x3","getMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}