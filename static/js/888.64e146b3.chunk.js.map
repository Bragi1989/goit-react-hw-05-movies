{"version":3,"file":"static/js/888.64e146b3.chunk.js","mappings":"8PACA,GAAiB,E,SCsEjB,EAjEqB,WACnB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAAwBL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA8BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAoB1B,OAlBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEAC,EAAAA,EAAAA,IAAgB5B,GAAS,KAAD,EAAjC,OAAPsB,EAAOG,EAAAI,KAAAJ,EAAAE,KAAA,GACSG,EAAAA,EAAAA,IAAgB9B,GAAS,KAAD,EAAjC,OAAPuB,EAAOE,EAAAI,KAAAJ,EAAAE,KAAA,GACcI,EAAAA,EAAAA,IAAgB/B,GAAS,KAAD,EAA7CwB,EAAYC,EAAAI,KAElBtB,EAAgBe,GAChBX,EAAQY,EAAQb,MAChBK,EAAWS,EAAaQ,SAASP,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAEjCS,QAAQC,MAAM,gCAA+BV,EAAAQ,IAAS,yBAAAR,EAAAW,OAAA,GAAAf,EAAA,mBAEzD,kBAZsB,OAAAH,EAAAmB,MAAA,KAAAC,UAAA,KAcvBrB,GACF,GAAG,CAACjB,IAECM,GAKHiC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,sBAA6BC,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,MAAAD,SAAKpC,EAAasC,SAClBD,EAAAA,EAAAA,KAAA,OACEE,IAAG,kCAAAC,OAAoCxC,EAAayC,aACpDC,IAAK1C,EAAasC,SAEpBD,EAAAA,EAAAA,KAAA,KAAAD,SAAIpC,EAAa2C,YAEjBN,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAAA,SAAgBC,SAC7BhC,EAAKwC,KAAI,SAACC,GAAK,OACdZ,EAAAA,EAAAA,MAAA,OAAoBC,UAAWC,EAAAA,UAAiBC,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,OACEE,IAAG,kCAAAC,OAAoCK,EAAMC,cAC7CJ,IAAKG,EAAME,QAEbV,EAAAA,EAAAA,KAAA,KAAAD,SAAIS,EAAME,SALFF,EAAMG,GAMV,OAIVX,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAAA,YAAmBC,SAChC5B,EAAQoC,KAAI,SAACK,GAAM,OAClBhB,EAAAA,EAAAA,MAAA,OAAqBC,UAAWC,EAAAA,WAAkBC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,KAAAD,SAAIa,EAAOC,UACXb,EAAAA,EAAAA,KAAA,KAAAD,SAAIa,EAAOE,YAFHF,EAAOD,GAGX,OAIVX,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,GAAG,IAAGjB,SAAC,qBAnCRC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,cAsChB,C,sLChEMkB,E,OAAWC,EAAAA,OAAa,CAC5BC,QAHa,+BAIbC,OAAQ,CACNC,QANY,sCAUVC,EAAa,eAAA/C,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAA6C,EAAA,OAAA9C,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEKiC,EAASO,IAAI,qBAAqB,KAAD,EAA1C,OAARD,EAAQzC,EAAAI,KAAAJ,EAAA2C,OAAA,SACPF,EAASG,MAAI,OAEoC,MAFpC5C,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAEpBS,QAAQC,MAAM,kCAAiCV,EAAAQ,IAASR,EAAAQ,GAAA,yBAAAR,EAAAW,OAAA,GAAAf,EAAA,kBAG3D,kBARkB,OAAAH,EAAAmB,MAAA,KAAAC,UAAA,KAUbgC,EAAY,eAAAC,GAAApD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAoD,EAAOC,GAAK,IAAAP,EAAA,OAAA9C,IAAAA,MAAA,SAAAsD,GAAA,cAAAA,EAAAhD,KAAAgD,EAAA/C,MAAA,cAAA+C,EAAAhD,KAAA,EAAAgD,EAAA/C,KAAA,EAENiC,EAASO,IAAI,gBAAiB,CACnDJ,OAAQ,CAAEU,MAAAA,KACT,KAAD,EAFY,OAARP,EAAQQ,EAAA7C,KAAA6C,EAAAN,OAAA,SAGPF,EAASG,MAAI,OAE4B,MAF5BK,EAAAhD,KAAA,EAAAgD,EAAAzC,GAAAyC,EAAA,SAEpBxC,QAAQC,MAAM,0BAAyBuC,EAAAzC,IAASyC,EAAAzC,GAAA,yBAAAyC,EAAAtC,OAAA,GAAAoC,EAAA,kBAGnD,gBAViBG,GAAA,OAAAJ,EAAAlC,MAAA,KAAAC,UAAA,KAYZV,EAAe,eAAAgD,GAAAzD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAyD,EAAO7E,GAAO,IAAAkE,EAAA,OAAA9C,IAAAA,MAAA,SAAA0D,GAAA,cAAAA,EAAApD,KAAAoD,EAAAnD,MAAA,cAAAmD,EAAApD,KAAA,EAAAoD,EAAAnD,KAAA,EAEXiC,EAASO,IAAI,UAADrB,OAAW9C,IAAW,KAAD,EAA1C,OAARkE,EAAQY,EAAAjD,KAAAiD,EAAAV,OAAA,SACPF,EAASG,MAAI,OAEkC,MAFlCS,EAAApD,KAAA,EAAAoD,EAAA7C,GAAA6C,EAAA,SAEpB5C,QAAQC,MAAM,gCAA+B2C,EAAA7C,IAAS6C,EAAA7C,GAAA,yBAAA6C,EAAA1C,OAAA,GAAAyC,EAAA,kBAGzD,gBARoBE,GAAA,OAAAH,EAAAvC,MAAA,KAAAC,UAAA,KAUfR,EAAe,eAAAkD,GAAA7D,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA6D,EAAOjF,GAAO,IAAAkE,EAAA,OAAA9C,IAAAA,MAAA,SAAA8D,GAAA,cAAAA,EAAAxD,KAAAwD,EAAAvD,MAAA,cAAAuD,EAAAxD,KAAA,EAAAwD,EAAAvD,KAAA,EAEXiC,EAASO,IAAI,UAADrB,OAAW9C,EAAO,aAAY,KAAD,EAAlD,OAARkE,EAAQgB,EAAArD,KAAAqD,EAAAd,OAAA,SACPF,EAASG,MAAI,OAEkC,MAFlCa,EAAAxD,KAAA,EAAAwD,EAAAjD,GAAAiD,EAAA,SAEpBhD,QAAQC,MAAM,gCAA+B+C,EAAAjD,IAASiD,EAAAjD,GAAA,yBAAAiD,EAAA9C,OAAA,GAAA6C,EAAA,kBAGzD,gBARoBE,GAAA,OAAAH,EAAA3C,MAAA,KAAAC,UAAA,KAUfP,EAAe,eAAAqD,GAAAjE,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAiE,EAAOrF,GAAO,IAAAkE,EAAA,OAAA9C,IAAAA,MAAA,SAAAkE,GAAA,cAAAA,EAAA5D,KAAA4D,EAAA3D,MAAA,cAAA2D,EAAA5D,KAAA,EAAA4D,EAAA3D,KAAA,EAEXiC,EAASO,IAAI,UAADrB,OAAW9C,EAAO,aAAY,KAAD,EAAlD,OAARkE,EAAQoB,EAAAzD,KAAAyD,EAAAlB,OAAA,SACPF,EAASG,MAAI,OAEkC,MAFlCiB,EAAA5D,KAAA,EAAA4D,EAAArD,GAAAqD,EAAA,SAEpBpD,QAAQC,MAAM,gCAA+BmD,EAAArD,IAASqD,EAAArD,GAAA,yBAAAqD,EAAAlD,OAAA,GAAAiD,EAAA,kBAGzD,gBARoBE,GAAA,OAAAH,EAAA/C,MAAA,KAAAC,UAAA,I","sources":["components/MovieDetails/MovieDetails.module.css","components/MovieDetails/MovieDetails.jsx","services/Api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { getMovieDetails, getMovieCredits, getMovieReviews } from '../../services/Api.jsx';\n\nimport styles from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [cast, setCast] = useState([]);\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const details = await getMovieDetails(movieId);\n        const credits = await getMovieCredits(movieId);\n        const movieReviews = await getMovieReviews(movieId);\n\n        setMovieDetails(details);\n        setCast(credits.cast);\n        setReviews(movieReviews.results);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className={styles.movieDetailsContainer}>\n      <h2>{movieDetails.title}</h2>\n      <img\n        src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\n        alt={movieDetails.title}\n      />\n      <p>{movieDetails.overview}</p>\n\n      <h3>Cast</h3>\n      <div className={styles.castList}>\n        {cast.map((actor) => (\n          <div key={actor.id} className={styles.actorCard}>\n            <img\n              src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n              alt={actor.name}\n            />\n            <p>{actor.name}</p>\n          </div>\n        ))}\n      </div>\n\n      <h3>Reviews</h3>\n      <div className={styles.reviewsList}>\n        {reviews.map((review) => (\n          <div key={review.id} className={styles.reviewCard}>\n            <p>{review.author}</p>\n            <p>{review.content}</p>\n          </div>\n        ))}\n      </div>\n\n      <Link to=\"/\">Back to Home</Link>\n    </div>\n  );\n};\n\nexport default MovieDetails;","import axios from 'axios';\n\nconst API_KEY = '117c7c107e7af0f4d9d4763ca17ce41d';\nconst apiUrl = 'https://api.themoviedb.org/3';\n\nconst instance = axios.create({\n  baseURL: apiUrl,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nconst fetchTrending = async () => {\n  try {\n    const response = await instance.get('/trending/all/day'); // Правильний шлях для отримання популярних фільмів\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nconst searchMovies = async (query) => {\n  try {\n    const response = await instance.get('/search/movie', {\n      params: { query },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    throw error;\n  }\n};\n\nconst getMovieDetails = async (movieId) => {\n  try {\n    const response = await instance.get(`/movie/${movieId}`); // Правильний шлях для отримання деталей фільму\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nconst getMovieCredits = async (movieId) => {\n  try {\n    const response = await instance.get(`/movie/${movieId}/credits`); // Правильний шлях для отримання акторського складу фільму\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    throw error;\n  }\n};\n\nconst getMovieReviews = async (movieId) => {\n  try {\n    const response = await instance.get(`/movie/${movieId}/reviews`); // Правильний шлях для отримання відгуків на фільм\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\n\nexport { fetchTrending, searchMovies, getMovieDetails, getMovieCredits, getMovieReviews };"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","_useState3","_useState4","cast","setCast","_useState5","_useState6","reviews","setReviews","useEffect","fetchMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","details","credits","movieReviews","_context","prev","next","getMovieDetails","sent","getMovieCredits","getMovieReviews","results","t0","console","error","stop","apply","arguments","_jsxs","className","styles","children","_jsx","title","src","concat","poster_path","alt","overview","map","actor","profile_path","name","id","review","author","content","Link","to","instance","axios","baseURL","params","api_key","fetchTrending","response","get","abrupt","data","searchMovies","_ref2","_callee2","query","_context2","_x","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","_x3","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}