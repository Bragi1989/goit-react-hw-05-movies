{"version":3,"file":"static/js/589.ad877f1b.chunk.js","mappings":"6OACA,EAA4B,0BAA5B,EAAkE,0BAAlE,EAAwG,0BAAxG,EAA8I,0B,0BCS9I,EANkB,SAAHA,GAAA,IAAMC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAK,OAC5BC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAcC,UAC3BH,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACH,UAAWC,EAAeG,GAAE,WAAAC,OAAaR,GAAKK,SAAEJ,KADrBD,EAE9B,ECOP,EAVkB,SAAHD,GAAA,IAAMU,EAAMV,EAANU,OAAM,OACzBP,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAcC,SAC1BI,EAAOC,OAAS,EACfD,EAAOE,KAAI,SAACC,GAAK,OAAKV,EAAAA,EAAAA,KAACW,GAASC,EAAAA,EAAAA,GAAA,GAAoBF,GAAdA,EAAMZ,GAAiB,KAE7DE,EAAAA,EAAAA,KAAA,KAAAG,SAAG,sBAEF,ECcP,EApBe,WACb,IAAAU,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAA0CL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAEhCG,EAAY,eAAA1B,GAAA2B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGC,EAAAA,GAAiBd,GAAa,KAAD,EAA7CU,EAAOC,EAAAI,KACbV,EAAiBK,EAAQA,SAAS,wBAAAC,EAAAK,OAAA,GAAAP,EAAA,KACnC,kBAHiB,OAAA7B,EAAAqC,MAAA,KAAAC,UAAA,KAKlB,OACEC,EAAAA,EAAAA,MAAA,OAAKnC,UAAWC,EAAcC,SAAA,EAC5BH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,mBACJH,EAAAA,EAAAA,KAAA,SAAOqC,KAAK,OAAOC,MAAOrB,EAAasB,SAAU,SAACC,GAAC,OAAKtB,EAAesB,EAAEC,OAAOH,MAAM,KACtFtC,EAAAA,EAAAA,KAAA,UAAQ0C,QAASnB,EAAapB,SAAC,YAE/BH,EAAAA,EAAAA,KAAC2C,EAAS,CAACpC,OAAQc,MAGzB,C,8MClBMuB,E,OAAWC,EAAAA,OAAa,CAC5BC,QAHa,+BAIbC,OAAQ,CACNC,QANY,sCAUVC,EAAiB,eAAApD,GAAA2B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAwB,EAAA,OAAAzB,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAECc,EAASO,IAAI,qBAAqB,KAAD,EAA1C,OAARD,EAAQtB,EAAAI,KAAAJ,EAAAwB,OAAA,SACPF,EAASG,MAAI,OAEoC,MAFpCzB,EAAAC,KAAA,EAAAD,EAAA0B,GAAA1B,EAAA,SAEpB2B,QAAQC,MAAM,kCAAiC5B,EAAA0B,IAAS1B,EAAA0B,GAAA,yBAAA1B,EAAAK,OAAA,GAAAP,EAAA,kBAG3D,kBARsB,OAAA7B,EAAAqC,MAAA,KAAAC,UAAA,KAUjBsB,EAAY,eAAAC,GAAAlC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAkC,EAAOC,GAAK,IAAAV,EAAA,OAAAzB,IAAAA,MAAA,SAAAoC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,cAAA+B,EAAAhC,KAAA,EAAAgC,EAAA/B,KAAA,EAENc,EAASO,IAAI,gBAAiB,CACnDJ,OAAQ,CAAEa,MAAAA,KACT,KAAD,EAFY,OAARV,EAAQW,EAAA7B,KAAA6B,EAAAT,OAAA,SAGPF,EAASG,MAAI,OAE4B,MAF5BQ,EAAAhC,KAAA,EAAAgC,EAAAP,GAAAO,EAAA,SAEpBN,QAAQC,MAAM,0BAAyBK,EAAAP,IAASO,EAAAP,GAAA,yBAAAO,EAAA5B,OAAA,GAAA0B,EAAA,kBAGnD,gBAViBG,GAAA,OAAAJ,EAAAxB,MAAA,KAAAC,UAAA,KAYZ4B,EAAe,eAAAC,GAAAxC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAwC,EAAOC,GAAO,IAAAhB,EAAA,OAAAzB,IAAAA,MAAA,SAAA0C,GAAA,cAAAA,EAAAtC,KAAAsC,EAAArC,MAAA,cAAAqC,EAAAtC,KAAA,EAAAsC,EAAArC,KAAA,EAEXc,EAASO,IAAI,UAAD7C,OAAW4D,IAAW,KAAD,EAA1C,OAARhB,EAAQiB,EAAAnC,KAAAmC,EAAAf,OAAA,SACPF,EAASG,MAAI,OAEkC,MAFlCc,EAAAtC,KAAA,EAAAsC,EAAAb,GAAAa,EAAA,SAEpBZ,QAAQC,MAAM,gCAA+BW,EAAAb,IAASa,EAAAb,GAAA,yBAAAa,EAAAlC,OAAA,GAAAgC,EAAA,kBAGzD,gBARoBG,GAAA,OAAAJ,EAAA9B,MAAA,KAAAC,UAAA,KAUfkC,EAAe,eAAAC,GAAA9C,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA8C,EAAOL,GAAO,IAAAhB,EAAA,OAAAzB,IAAAA,MAAA,SAAA+C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,cAAA0C,EAAA3C,KAAA,EAAA2C,EAAA1C,KAAA,EAEXc,EAASO,IAAI,UAAD7C,OAAW4D,EAAO,aAAY,KAAD,EAAlD,OAARhB,EAAQsB,EAAAxC,KAAAwC,EAAApB,OAAA,SACPF,EAASG,MAAI,OAEkC,MAFlCmB,EAAA3C,KAAA,EAAA2C,EAAAlB,GAAAkB,EAAA,SAEpBjB,QAAQC,MAAM,gCAA+BgB,EAAAlB,IAASkB,EAAAlB,GAAA,yBAAAkB,EAAAvC,OAAA,GAAAsC,EAAA,kBAGzD,gBARoBE,GAAA,OAAAH,EAAApC,MAAA,KAAAC,UAAA,KAUfuC,EAAe,eAAAC,GAAAnD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAmD,EAAOV,GAAO,IAAAhB,EAAA,OAAAzB,IAAAA,MAAA,SAAAoD,GAAA,cAAAA,EAAAhD,KAAAgD,EAAA/C,MAAA,cAAA+C,EAAAhD,KAAA,EAAAgD,EAAA/C,KAAA,EAEXc,EAASO,IAAI,UAAD7C,OAAW4D,EAAO,aAAY,KAAD,EAAlD,OAARhB,EAAQ2B,EAAA7C,KAAA6C,EAAAzB,OAAA,SACPF,EAASG,MAAI,OAEkC,MAFlCwB,EAAAhD,KAAA,EAAAgD,EAAAvB,GAAAuB,EAAA,SAEpBtB,QAAQC,MAAM,gCAA+BqB,EAAAvB,IAASuB,EAAAvB,GAAA,yBAAAuB,EAAA5C,OAAA,GAAA2C,EAAA,kBAGzD,gBARoBE,GAAA,OAAAH,EAAAzC,MAAA,KAAAC,UAAA,KASf4C,EAAe,eAAAC,GAAAxD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAwD,EAAOC,GAAO,IAAAhC,EAAA,OAAAzB,IAAAA,MAAA,SAAA0D,GAAA,cAAAA,EAAAtD,KAAAsD,EAAArD,MAAA,cAAAqD,EAAAtD,KAAA,EAAAsD,EAAArD,KAAA,EAEXc,EAASO,IAAI,WAAD7C,OAAY4E,IAAW,KAAD,EAA3C,OAARhC,EAAQiC,EAAAnD,KAAAmD,EAAA/B,OAAA,SACPF,EAASG,MAAI,OAEkC,MAFlC8B,EAAAtD,KAAA,EAAAsD,EAAA7B,GAAA6B,EAAA,SAEpB5B,QAAQC,MAAM,gCAA+B2B,EAAA7B,IAAS6B,EAAA7B,GAAA,yBAAA6B,EAAAlD,OAAA,GAAAgD,EAAA,kBAGzD,gBARoBG,GAAA,OAAAJ,EAAA9C,MAAA,KAAAC,UAAA,I","sources":["webpack://react-homework-template/./src/components/Movies/Movies.module.css?9f30","components/Movies/MovieItem.jsx","components/Movies/MovieList.jsx","components/Movies/Movies.jsx","services/Api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieMenu\":\"Movies_movieMenu__QM1PF\",\"movieList\":\"Movies_movieList__3O+kj\",\"movieItem\":\"Movies_movieItem__WBe6u\",\"movieLink\":\"Movies_movieLink__e75lb\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport css from '../Movies/Movies.module.css';\n\nconst MovieItem = ({ id, title }) => (\n  <li className={css.movieItem} key={id}>\n    <Link className={css.movieLink} to={`/movies/${id}`}>{title}</Link>\n  </li>\n);\n\nexport default MovieItem;","import React from 'react';\nimport MovieItem from './MovieItem';\nimport css from '../Movies/Movies.module.css';\n\nconst MovieList = ({ movies }) => (\n  <ul className={css.movieList}>\n    {movies.length > 0 ? (\n      movies.map((movie) => <MovieItem key={movie.id} {...movie} />)\n    ) : (\n      <p>No movies found.</p>\n    )}\n  </ul>\n);\n\nexport default MovieList;","import React, { useState } from 'react';\nimport * as Api from '../../services/Api';\nimport css from '../Movies/Movies.module.css';\nimport MovieList from './MovieList';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleSearch = async () => {\n    const results = await Api.searchMovies(searchQuery);\n    setSearchResults(results.results);\n  };\n\n  return (\n    <div className={css.movieMenu}>\n      <h1>Search Movies</h1>\n      <input type=\"text\" value={searchQuery} onChange={(e) => setSearchQuery(e.target.value)} />\n      <button onClick={handleSearch}>Search</button>\n\n      <MovieList movies={searchResults} />\n    </div>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\n\nconst API_KEY = '117c7c107e7af0f4d9d4763ca17ce41d';\nconst apiUrl = 'https://api.themoviedb.org/3';\n\nconst instance = axios.create({\n  baseURL: apiUrl,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nconst getTrendingMovies = async () => {\n  try {\n    const response = await instance.get('/trending/all/day');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nconst searchMovies = async (query) => {\n  try {\n    const response = await instance.get('/search/movie', {\n      params: { query },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    throw error;\n  }\n};\n\nconst getMovieDetails = async (movieId) => {\n  try {\n    const response = await instance.get(`/movie/${movieId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nconst getMovieCredits = async (movieId) => {\n  try {\n    const response = await instance.get(`/movie/${movieId}/credits`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    throw error;\n  }\n};\n\nconst getMovieReviews = async (movieId) => {\n  try {\n    const response = await instance.get(`/movie/${movieId}/reviews`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\nconst getActorDetails = async (actorId) => {\n  try {\n    const response = await instance.get(`/person/${actorId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching actor details:', error);\n    throw error;\n  }\n};\n\nexport {\n  getTrendingMovies,\n  searchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n  getActorDetails,\n};"],"names":["_ref","id","title","_jsx","className","css","children","Link","to","concat","movies","length","map","movie","MovieItem","_objectSpread","_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_useState3","_useState4","searchResults","setSearchResults","handleSearch","_asyncToGenerator","_regeneratorRuntime","_callee","results","_context","prev","next","Api","sent","stop","apply","arguments","_jsxs","type","value","onChange","e","target","onClick","MovieList","instance","axios","baseURL","params","api_key","getTrendingMovies","response","get","abrupt","data","t0","console","error","searchMovies","_ref2","_callee2","query","_context2","_x","getMovieDetails","_ref3","_callee3","movieId","_context3","_x2","getMovieCredits","_ref4","_callee4","_context4","_x3","getMovieReviews","_ref5","_callee5","_context5","_x4","getActorDetails","_ref6","_callee6","actorId","_context6","_x5"],"sourceRoot":""}