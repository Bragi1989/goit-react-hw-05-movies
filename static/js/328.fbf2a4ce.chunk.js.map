{"version":3,"file":"static/js/328.fbf2a4ce.chunk.js","mappings":"8PACA,EAA2B,uBAA3B,EAA6D,uBAA7D,EAA+F,uB,SCgE/F,MA5DA,WACE,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAqCpB,OAnCAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAESC,EAAAA,GAAoBlB,GAAS,KAAD,EAA7Cc,EAAQC,EAAAI,KACdZ,EAAQO,EAASR,MAAMS,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEvBM,QAAQC,MAAM,uBAAsBP,EAAAK,IAAS,yBAAAL,EAAAQ,OAAA,GAAAV,EAAA,kBAEhD,kBAPc,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KASfhB,GACF,GAAG,CAACT,KAEJQ,EAAAA,EAAAA,YAAU,WACR,IAAMkB,EAAgB,eAAAC,GAAAhB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAgB,IAAA,IAAAC,EAAA,OAAAjB,IAAAA,MAAA,SAAAkB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EACQc,QAAQC,IACrC1B,EAAK2B,IAAG,eAAAC,GAAAvB,EAAAA,EAAAA,GAAAC,IAAAA,MAAC,SAAAuB,EAAOC,GAAK,IAAAC,EAAA,OAAAzB,IAAAA,MAAA,SAAA0B,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cAAAqB,EAAAtB,KAAA,EAAAsB,EAAArB,KAAA,EAEUC,EAAAA,GAAoBkB,EAAMG,IAAI,KAAD,EAAtC,OAAZF,EAAYC,EAAAnB,KAAAmB,EAAAE,OAAA,UAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNL,GAAK,IAAEM,MAAOL,EAAaM,gBAAY,OAEmB,OAFnBL,EAAAtB,KAAA,EAAAsB,EAAAlB,GAAAkB,EAAA,SAEnDjB,QAAQC,MAAM,oCAADsB,OAAqCR,EAAMG,GAAE,KAAAD,EAAAlB,IAAYkB,EAAAE,OAAA,SAC/DJ,GAAK,yBAAAE,EAAAf,OAAA,GAAAY,EAAA,kBAEf,gBAAAU,GAAA,OAAAX,EAAAV,MAAA,KAAAC,UAAA,EARO,KASR,KAAD,EAVKI,EAAgBC,EAAAX,KAYtBZ,EAAQsB,GAAkB,wBAAAC,EAAAP,OAAA,GAAAK,EAAA,KAC3B,kBAdqB,OAAAD,EAAAH,MAAA,KAAAC,UAAA,KAgBlBnB,EAAKwC,OAAS,GAChBpB,GAEJ,GAAG,CAACpB,KAGFyC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAaH,SACzB1C,EAAK2B,KAAI,SAACG,EAAOgB,GAAK,OACrBL,EAAAA,EAAAA,MAAA,MAAIG,UAAWC,EAAaH,SAAA,CACzBZ,EAAMM,QACLO,EAAAA,EAAAA,KAAA,OACEC,UAAWC,EACXE,IAAG,GAAAT,OAAKR,EAAMkB,KAAI,aAClBC,IAAG,kCAAAX,OAAoCR,EAAMM,SAGhDN,EAAMkB,OAAI,GAAAV,OARwBR,EAAMG,GAAE,KAAAK,OAAIQ,GAS5C,QAKf,C","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\",\"castLink\":\"Cast_castLink__xADzx\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as Api from '../../services/Api';\nimport css from '../Cast/Cast.module.css';\n\nfunction Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const castData = await Api.getMovieCredits(movieId);\n        setCast(castData.cast);\n      } catch (error) {\n        console.error('Error fetching cast:', error);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  useEffect(() => {\n    const fetchActorPhotos = async () => {\n      const actorsWithPhotos = await Promise.all(\n        cast.map(async (actor) => {\n          try {\n            const actorDetails = await Api.getActorDetails(actor.id);\n            return { ...actor, photo: actorDetails.profile_path };\n          } catch (error) {\n            console.error(`Error fetching details for actor ${actor.id}:`, error);\n            return actor;\n          }\n        })\n      );\n\n      setCast(actorsWithPhotos);\n    };\n\n    if (cast.length > 0) {\n      fetchActorPhotos();\n    }\n  }, [cast]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      <ul className={css.castList}>\n        {cast.map((actor, index) => (\n          <li className={css.castItem} key={`${actor.id}-${index}`}>\n            {actor.photo && (\n              <img\n                className={css.castLink}\n                alt={`${actor.name} headshot`}\n                src={`https://image.tmdb.org/t/p/w200${actor.photo}`}\n              />\n            )}\n            {actor.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Cast;"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","castData","_context","prev","next","Api","sent","t0","console","error","stop","apply","arguments","fetchActorPhotos","_ref2","_callee3","actorsWithPhotos","_context3","Promise","all","map","_ref3","_callee2","actor","actorDetails","_context2","id","abrupt","_objectSpread","photo","profile_path","concat","_x","length","_jsxs","children","_jsx","className","css","index","alt","name","src"],"sourceRoot":""}