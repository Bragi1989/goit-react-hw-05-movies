{"version":3,"file":"static/js/189.90102df3.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.jsx","services/Api.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport * as Api from '../../services/Api';\nimport { useParams } from 'react-router-dom';\n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState(null);\n\n  useEffect(() => {\n    Api.getMovieReviews(movieId).then((data) => setMovieReviews(data));\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Movie Reviews</h2>\n      {movieReviews && movieReviews.results && movieReviews.results.length > 0 ? (\n        <ul>\n          {movieReviews.results.map((review) => (\n            <li key={review.id}>\n              <h3>{review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No reviews available</p>\n      )}\n    </div>\n  );\n}\n\nexport default Reviews;","import axios from 'axios';\n\nconst API_KEY = '117c7c107e7af0f4d9d4763ca17ce41d';\nconst apiUrl = 'https://api.themoviedb.org/3';\n\nconst instance = axios.create({\n  baseURL: apiUrl,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nconst getTrendingMovies = async () => {\n  try {\n    const response = await instance.get('/trending/all/day');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nconst searchMovies = async (query) => {\n  try {\n    const response = await instance.get('/search/movie', {\n      params: { query },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    throw error;\n  }\n};\n\nconst getMovieDetails = async (movieId) => {\n  try {\n    const response = await instance.get(`/movie/${movieId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nconst getMovieCredits = async (movieId) => {\n  try {\n    const response = await instance.get(`/movie/${movieId}/credits`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    throw error;\n  }\n};\n\nconst getMovieReviews = async (movieId) => {\n  try {\n    const response = await instance.get(`/movie/${movieId}/reviews`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\nconst getActorDetails = async (actorId) => {\n  try {\n    const response = await instance.get(`/person/${actorId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching actor details:', error);\n    throw error;\n  }\n};\n\nexport {\n  getTrendingMovies,\n  searchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n  getActorDetails,\n};"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieReviews","setMovieReviews","useEffect","Api","then","data","_jsxs","children","_jsx","results","length","map","review","author","content","id","instance","axios","baseURL","params","api_key","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","get","sent","abrupt","t0","console","error","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_context2","_x","getMovieDetails","_ref3","_callee3","_context3","concat","_x2","getMovieCredits","_ref4","_callee4","_context4","_x3","getMovieReviews","_ref5","_callee5","_context5","_x4","getActorDetails","_ref6","_callee6","actorId","_context6","_x5"],"sourceRoot":""}