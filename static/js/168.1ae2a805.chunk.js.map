{"version":3,"file":"static/js/168.1ae2a805.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.module.css","components/Reviews/Reviews.jsx","services/Api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../../services/Api.jsx';\n\nimport styles from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const movieReviews = await getMovieReviews(movieId);\n        setReviews(movieReviews.results);\n      } catch (error) {\n        console.error('Error fetching movie reviews:', error);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div className={styles.reviewsContainer}>\n      <h2>Reviews</h2>\n      <div className={styles.reviewsList}>\n        {reviews.length > 0 ? (\n          reviews.map((review) => (\n            <div key={review.id} className={styles.reviewCard}>\n              <p>{review.author}</p>\n              <p>{review.content}</p>\n            </div>\n          ))\n        ) : (\n          <p>No reviews available.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Reviews;","import axios from 'axios';\n\nconst API_KEY = '117c7c107e7af0f4d9d4763ca17ce41d';\nconst apiUrl = 'https://api.themoviedb.org/3';\n\nconst instance = axios.create({\n  baseURL: apiUrl,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nconst fetchTrending = async () => {\n  try {\n    const response = await instance.get('/trending/all/day'); // Правильний шлях для отримання популярних фільмів\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nconst searchMovies = async (query) => {\n  try {\n    const response = await instance.get('/search/movie', {\n      params: { query },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    throw error;\n  }\n};\n\nconst getMovieDetails = async (movieId) => {\n  try {\n    const response = await instance.get(`/movie/${movieId}`); // Правильний шлях для отримання деталей фільму\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nconst getMovieCredits = async (movieId) => {\n  try {\n    const response = await instance.get(`/movie/${movieId}/credits`); // Правильний шлях для отримання акторського складу фільму\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    throw error;\n  }\n};\n\nconst getMovieReviews = async (movieId) => {\n  try {\n    const response = await instance.get(`/movie/${movieId}/reviews`); // Правильний шлях для отримання відгуків на фільм\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\n\nexport { fetchTrending, searchMovies, getMovieDetails, getMovieCredits, getMovieReviews };"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","fetchMovieReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieReviews","_context","prev","next","getMovieReviews","sent","results","t0","console","error","stop","apply","arguments","_jsxs","className","styles","children","_jsx","length","map","review","author","content","id","instance","axios","baseURL","params","api_key","fetchTrending","response","get","abrupt","data","searchMovies","_ref2","_callee2","query","_context2","_x","getMovieDetails","_ref3","_callee3","_context3","concat","_x2","getMovieCredits","_ref4","_callee4","_context4","_x3","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}